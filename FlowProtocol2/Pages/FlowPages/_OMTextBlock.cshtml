@using FlowProtocol2.Core;
@model OMTextBlock;
@if (@Model != null)
{
    @if (Model.BlockType == OutputType.Paragraph)
    {
        <p>
            @foreach (var tl in Model.TextLines)
            {
                @foreach (var te in tl.TextElements) @await Html.PartialAsync("_OMTextElement", te)
                <br>
                @foreach (var sb in tl.Subblocks) @await Html.PartialAsync("_OMTextBlock", sb)
            }
        </p>
    }
    else if (Model.BlockType == OutputType.Listing)
    {
        <ul>
            @foreach (var tl in Model.TextLines)
            {
                <li>
                    @foreach (var te in tl.TextElements) @await Html.PartialAsync("_OMTextElement", te)
                    @foreach (var sb in tl.Subblocks) @await Html.PartialAsync("_OMTextBlock", sb)
                </li>
            }
        </ul>
    }
    else if (Model.BlockType == OutputType.Enumeration)
    {
        <ol type="@Model.NumerationType">
            @foreach (var tl in Model.TextLines)
            {
                <li>
                    @foreach (var te in tl.TextElements) @await Html.PartialAsync("_OMTextElement", te)
                    @foreach (var sb in tl.Subblocks) @await Html.PartialAsync("_OMTextBlock", sb)
                </li>
            }
        </ol>
    }
    else if (Model.BlockType == OutputType.Code)
    {                
        <pre style="margin-bottom: 4px;"><code id="@Model.ID">@Model.Codeblock</code></pre>
        <div style="margin-bottom: 10px;">
            <button class="btn btn-secondary btn-sm" onclick="CopyFunction('@Model.ID')">In Zwischenablage kopieren</button>            
        </div>
    }
}